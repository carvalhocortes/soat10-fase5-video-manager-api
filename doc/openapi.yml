openapi: 3.0.4

info:
  title: API de gerenciamento de envio de arquivos
  version: 1.1.0
  description: |
    API responsável por gerenciar o envio de arquivos para o AWS S3.

  contact:
    name: Suporte
    email: suporte@example.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

tags:
  - name: Arquivos
    description: Operações relacionadas ao gerenciamento de arquivos

servers:
  - url: http://localhost:3333
    description: Ambiente local de desenvolvimento

paths:
  /list:
    get:
      tags:
        - Arquivos
      operationId: issueClientToken
      summary: Autenticar cliente e obter tokens
      description: |
        Valida as credenciais do cliente no AWS Cognito e retorna os tokens de acesso.
      requestBody:
        required: true
        description: Credenciais do cliente para autenticação
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
            examples:
              CredenciaisValidas:
                $ref: '#/components/examples/AuthRequestExampleValido'
              EmailInvalido:
                $ref: '#/components/examples/AuthRequestExampleEmailInvalido'
      responses:
        '200':
          $ref: '#/components/responses/AuthSuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security: []
  /download:
    get:
      tags:
        - Arquivos
      operationId: issueClientToken
      summary: Autenticar cliente e obter tokens
      description: |
        Valida as credenciais do cliente no AWS Cognito e retorna os tokens de acesso.
      requestBody:
        required: true
        description: Credenciais do cliente para autenticação
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
            examples:
              CredenciaisValidas:
                $ref: '#/components/examples/AuthRequestExampleValido'
              EmailInvalido:
                $ref: '#/components/examples/AuthRequestExampleEmailInvalido'
      responses:
        '200':
          $ref: '#/components/responses/AuthSuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security: []
  /upload:
    post:
      tags:
        - Arquivos
      operationId: uploadFile
      summary: Fazer upload de um arquivo
      description: |
        Faz o upload de um arquivo para o AWS S3.
      requestBody:
        required: true
        description: Dados do usuário a ser criado
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
            examples:
              UsuarioValido:
                $ref: '#/components/examples/CreateUserRequestExampleValido'
              EmailInvalido:
                $ref: '#/components/examples/CreateUserRequestExampleEmailInvalido'
      responses:
        '201':
          $ref: '#/components/responses/CreateUserSuccess'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    AuthRequest:
      title: AuthRequest
      type: object
      additionalProperties: false
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: Email cadastrado do cliente
        password:
          type: string
          description: Senha do cliente
          minLength: 6
          maxLength: 128

    CreateUserRequest:
      title: CreateUserRequest
      type: object
      additionalProperties: false
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: Email do usuário a ser criado
        password:
          type: string
          description: Senha do usuário
          minLength: 6
          maxLength: 128
        name:
          type: string
          description: Nome do usuário (opcional)

    CreateUserResponse:
      title: CreateUserResponse
      type: object
      description: Dados retornados após criação bem-sucedida do usuário
      required:
        - userSub
        - email
        - message
      properties:
        userSub:
          type: string
          description: ID único do usuário no AWS Cognito
          example: '12345678-1234-1234-1234-123456789012'
        email:
          type: string
          format: email
          description: Email do usuário criado
          example: 'usuario@exemplo.com'
        message:
          type: string
          description: Mensagem de confirmação
          example: 'Usuário criado com sucesso'

    AuthResponse:
      title: AuthResponse
      type: object
      description: Dados retornados após autenticação bem-sucedida
      properties:
        AccessToken:
          type: string
          description: Token de acesso AWS Cognito
          example: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...'
        RefreshToken:
          type: string
          description: Token de refresh para renovação de acesso
          example: 'eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ...'
        IdToken:
          type: string
          description: Token de identidade contendo informações do usuário
          example: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9...'
        ExpiresIn:
          type: integer
          description: Tempo de expiração do AccessToken em segundos
          example: 3600
        TokenType:
          type: string
          description: Tipo do token
          example: 'Bearer'

    Error:
      title: Error
      type: object
      description: Estrutura padrão de erro
      properties:
        httpCode:
          type: integer
          description: Código HTTP retornado
        internalCode:
          type: string
          description: Código interno categorizando o erro
        message:
          type: string
          description: Descrição legível do erro

  responses:
    AuthSuccess:
      description: Autenticação realizada com sucesso
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthResponse'
          examples:
            Sucesso:
              $ref: '#/components/examples/AuthResponseExampleSucesso'

    CreateUserSuccess:
      description: Usuário criado com sucesso
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateUserResponse'
          examples:
            Sucesso:
              $ref: '#/components/examples/CreateUserResponseExampleSucesso'

    BadRequest:
      description: Requisição inválida (erro de validação ou formato)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            BadRequest:
              $ref: '#/components/examples/BadRequestError'

    Unauthorized:
      description: Credenciais inválidas ou não autorizadas
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            Unauthorized:
              $ref: '#/components/examples/UnauthorizedError'

    InternalServerError:
      description: Erro inesperado no servidor
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          examples:
            InternalServerError:
              $ref: '#/components/examples/InternalServerError'

  examples:
    AuthRequestExampleValido:
      summary: Requisição válida
      value:
        email: cliente@exemplo.com
        password: senha123

    AuthRequestExampleEmailInvalido:
      summary: Email em formato inválido
      value:
        email: cliente_exemplo
        password: senha123

    CreateUserRequestExampleValido:
      summary: Requisição válida para criação de usuário
      value:
        email: usuario@exemplo.com
        password: minhasenha123
        name: João Silva

    CreateUserRequestExampleEmailInvalido:
      summary: Email em formato inválido para criação
      value:
        email: usuario@exemplo.com
        password: minhasenha123

    CreateUserResponseExampleSucesso:
      summary: Retorno de criação de usuário bem-sucedida
      value:
        userSub: '12345678-1234-1234-1234-123456789012'
        email: 'usuario@exemplo.com'
        message: 'Usuário criado com sucesso'

    AuthResponseExampleSucesso:
      summary: Retorno de autenticação bem-sucedida
      value:
        AccessToken: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3OC0xMjM0LTEyMzQtMTIzNC0xMjM0NTY3ODkwMTIiLCJhdWQiOiJhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejEyMzQ1Njc4OTAiLCJjb2duaXRvOnVzZXJuYW1lIjoidXNlckBleGFtcGxlLmNvbSIsImV4cCI6MTcwMDAwMDAwMCwiaWF0IjoxNjk5OTk2NDAwfQ.signature'
        RefreshToken: 'eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.refreshTokenExample'
        IdToken: 'eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3OC0xMjM0LTEyMzQtMTIzNC0xMjM0NTY3ODkwMTIiLCJhdWQiOiJhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejEyMzQ1Njc4OTAiLCJjb2duaXRvOnVzZXJuYW1lIjoidXNlckBleGFtcGxlLmNvbSIsImVtYWlsIjoidXNlckBleGFtcGxlLmNvbSIsImV4cCI6MTcwMDAwMDAwMCwiaWF0IjoxNjk5OTk2NDAwfQ.signature'
        ExpiresIn: 3600
        TokenType: 'Bearer'

    BadRequestError:
      summary: Erro de requisição inválida
      value:
        httpCode: 400
        internalCode: BAD_REQUEST
        message: Campo "email" é obrigatório

    UnauthorizedError:
      summary: Erro de autenticação
      value:
        httpCode: 401
        internalCode: UNAUTHORIZED
        message: Authentication failed

    InternalServerError:
      summary: Erro interno do servidor
      value:
        httpCode: 500
        internalCode: INTERNAL_SERVER_ERROR
        message: Erro interno do servidor
